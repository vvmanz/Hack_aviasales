Архитектура Проекта "Автоматизированная система прогнозирования цен на авиабилеты"
Общее описание
Проект представляет собой систему, разработанную для прогнозирования цен на авиабилеты, основываясь на данных, полученных из API и хранящихся в базе данных SQLite. Проект включает в себя фронтенд, реализованный на Streamlit, и бэкенд на Flask, обращающийся к SQLite базе данных.

Структура проекта
Проект состоит из следующих компонентов:

Streamlit Frontend: Интерфейс пользователя для ввода данных о полётах и получения прогноза цен.
Flask Backend: API сервер, обрабатывающий запросы от фронтенда и взаимодействующий с базой данных SQLite.
SQLite Database: Хранилище данных о рейсах и ценах на авиабилеты.
Data Processing Scripts: Скрипты для обработки и загрузки данных в базу данных SQLite.

Компоненты системы
1. Streamlit Frontend
Функционал: Предоставляет пользовательский интерфейс для запроса данных о рейсах и получения графика изменения цен.
Особенности: Использует библиотеку Streamlit для создания интерактивного веб-приложения.

2. Flask Backend
API Endpoints:
/api/flights: Получает данные о полётах из базы данных в соответствии с запросом пользователя.
/api/price_forecast: Возвращает данные для построения графика изменения цен на авиабилеты.
Обработка запросов: Получает запросы от фронтенда, обращается к базе данных и возвращает результаты.

3. SQLite Database
Структура БД: Содержит таблицы Flights и Cities, где хранятся данные о рейсах и городах.
Загрузка данных: Используется скрипт sqlite_import_from_api.py для загрузки и обновления данных в БД.

4. Data Processing Scripts
amadeus_api.py: Скрипт для получения данных о рейсах через Amadeus API и их форматирования.
sqlite_import_from_api.py: Скрипт для импорта обработанных данных в базу данных SQLite.

Работа системы
Запрос данных: Пользователь вводит данные о рейсе (город вылета, назначения, даты) на фронтенде Streamlit.
Обработка запроса: Запрос отправляется на Flask сервер, который извлекает соответствующие данные из SQLite базы данных.
Возврат данных: Пользователю предоставляется информация о доступных рейсах и график изменения цен, если нажата кнопка "Прогноз цены на билет".
Интерактивность: Пользователь может взаимодействовать с системой через фронтенд, отправляя различные запросы и получая обновленные данные.
Технологии
Фронтенд: Streamlit
Бэкенд: Flask
База данных: SQLite
Визуализация данных: Matplotlib
